#include <iostream>
#include "interpolation.h"
#include <fstream>

int readFile(const std::string&, std::vector<float>&,
	std::vector<float>&);

int writeFile(const std::string&, const std::vector<float>&,
	const std::vector<float>&);

int main()
{
	using namespace std;

	vector<float> inputX, inputY;
	if (readFile("input.txt", inputX, inputY))
	{
		cout << "Error";
		return 1;
	}

	float step = 0.25f; // Øàã.
	// 0, 0.25, 0.5, 0.75, 1, ..., 5
	vector<float> outputX, outputY;
	for (float x = inputX.front(); x <= inputX.back(); x += step)
	{
		outputX.push_back(x);
		outputY.push_back(lagrange(inputX, inputY, x));
	}

	if (writeFile("output.txt", outputX, outputY))
	{
		cout << "Error";
		return 1;
	}

	return 0;
}



int readFile(const std::string& filename, std::vector<float>& x,
	std::vector<float>& y)
{
	using namespace std;

	fstream input(filename, fstream::in);
	if (input.is_open())
	{
		float pointX = 0, pointY = 0;
		while (!input.eof())
		{
			input >> pointX >> pointY;
			x.push_back(pointX);
			y.push_back(pointY);
		}
	}
	else
	{
		input.close();
		return 1;
	}

	input.close();
	return 0;
}



int writeFile(const std::string& filename, const std::vector<float>& x,
	const std::vector<float>& y)
{
	using namespace std;

	assert(x.size() == y.size());

	fstream output(filename, fstream::out);
	if (output.is_open())
	{
		for (size_t i = 0; i < x.size(); ++i)
		{
			output << "(" << x[i] << "; " << y[i] << ") ";
		}
	}
	else
	{
		output.close();
		return 1;
	}

	output.close();
	return 0;
}
